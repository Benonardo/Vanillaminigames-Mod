import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }

        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'idea'
apply plugin: 'java'

apply plugin: 'net.minecraftforge.gradle'

def gitVersion = { ->
    def stdout = new ByteArrayOutputStream()

    exec {
        commandLine 'git', 'describe', '--tags', '--abbrev=0', '--always', 'HEAD'
        standardOutput = stdout
    }

    return stdout.toString().trim()
}

version = "${gitVersion}"
group = 'com.benonardo'
archivesBaseName = project.name.toLowerCase()

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'snapshot', version: '20201028-1.16.3'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                vanillaminigamesmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                vanillaminigamesmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'vanillaminigamesmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                vanillaminigamesmod {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: project.version.toString()]
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.0.22'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.name.toLowerCase(),
                "Specification-Vendor"    : "Benonardo",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "Benonardo",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
